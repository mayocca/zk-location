{
  "noir_version": "0.34.0+359caafac5e489901d9ff02b08d1a688178d9b0a",
  "hash": 13349282067027884614,
  "abi": {
    "parameters": [
      {
        "name": "x1",
        "type": { "kind": "integer", "sign": "signed", "width": 32 },
        "visibility": "public"
      },
      {
        "name": "y1",
        "type": { "kind": "integer", "sign": "signed", "width": 32 },
        "visibility": "public"
      },
      {
        "name": "x2",
        "type": { "kind": "integer", "sign": "signed", "width": 32 },
        "visibility": "public"
      },
      {
        "name": "y2",
        "type": { "kind": "integer", "sign": "signed", "width": 32 },
        "visibility": "public"
      },
      {
        "name": "x",
        "type": { "kind": "integer", "sign": "signed", "width": 32 },
        "visibility": "public"
      },
      {
        "name": "y",
        "type": { "kind": "integer", "sign": "signed", "width": 32 },
        "visibility": "public"
      }
    ],
    "return_type": null,
    "error_types": {}
  },
  "bytecode": "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",
  "debug_symbols": "tdzfTuJAFIDxd+k1FzPnz8wcX2VjDCoaEoJGcZON8d0XWWpcaDClfJctc36QwEdDKbx394vbt8eb5frh6bW7+vXerZ7u5pvl03q79d6V3a7X5/n6c+t1M3/ZdFclYtYt1vfdVZX8MeselqvF596P2dHSLP3SbOn70utZV0G7gXaAdk4knklcSFxJ3Kbipj3ueog7iRcSryTeSDxAXBKJZxIfLLSK9biV8yMSJXEjcSfxQuKVxBuJB4hrmoqfiEgziQuJK4kbiTuJFxKvJD5cqH0dLGqaEFGAuCUSzyQuJK4kbiTuJF6m4iciskrijcQDxD2ReCZxIXEl8Z8+h9bDMtxHT5TRE3X0RBs9EWMnyvDrs/UH1pb89BMhTfZLJeQQzyQuJK4kbiTuJF5IvJJ4m4qH75dqskM8QLwmEs8kLiSuJG4k7iQ+WGhLrcclzo+oVhJvJB4g3hKJZxIXElcSt6n4iYiak3gh8UrijcQDxCOReCbx4UK1L6O5nB9RKIkbiTuJFxKvJN5IPEA8pzRVP1FRThnVBdUV1Q3VHdULqldU/+kDqR8nEqNHcho/ksePyPgRHT8y+EqN3J/cCv/hO3390jXKke6oXlC9onpD9SD14YtMLqZnVBdUV1RHWxW0VUFbFbRVmdqqpbpfav9fIrXTg9Q1oXpGdUF1RXVDdUf1guoV1dFWFW3V0FYNbdUmt/p12ZHp0TuwKaobqjuqF1SvqN5QPUjdE6pnVEdbdbRVR1t1tFW/4HF1QK+o3lA9SL0kVM+oLqiuqG6oPq7V3chggNvz2P3dbE/cttMPyUvvezv+wVOF/Qb7wfrDV91c0M+wL7CvsG+w77AP91vhfivcb4X7bRfot5Xej3bkZ9gX2FfYN9h32C+wX2G/wX6wfsD9BtxvwP0G3G+M7Xc3NDbK6+3G7ctytVo+3nz/u4zt7t/zl+X8drXYbz68re++3br58/zvli3xFw==",
  "file_map": {
    "69": {
      "source": "/// Checks if a given longitude is valid (between -180 and 180 degrees, inclusive)\nfn is_valid_longitude(lon: i32) -> bool {\n    lon >= -180 & lon <= 180\n}\n\n/// Checks if a given latitude is valid (between -90 and 90 degrees, inclusive)\nfn is_valid_latitude(lat: i32) -> bool {\n    lat >= -90 & lat <= 90\n}\n\nfn is_longitude_in_range(start: i32, end: i32, point: i32) -> bool {\n    if start <= end {\n        point >= start & point <= end\n    } else {\n        point >= start | point <= end\n    }\n}\n\nfn is_latitude_in_range(start: i32, end: i32, point: i32) -> bool {\n    point >= start & point <= end\n}\n\nfn main(x1: pub i32, y1: pub i32, x2: pub i32, y2: pub i32, x: pub i32, y: pub i32) {\n    assert(is_valid_longitude(x1) & is_valid_longitude(x2) & is_valid_longitude(x));\n    assert(is_valid_latitude(y1) & is_valid_latitude(y2) & is_valid_latitude(y));\n\n    // Check if the point is in the longitude range\n    assert(is_longitude_in_range(x1, x2, x));\n\n    // Check if the point is in the latitude range\n    assert(is_latitude_in_range(y1, y2, y));\n}\n\n#[test]\nfn test_point_inside_rectangle() {\n    main(0, 0, 45, 45, 30, 30);\n}\n\n#[test]\nfn test_rectangle_crossing_antimeridian() {\n    main(170, -30, -170, 30, 175, 0);\n}\n\n#[test(should_fail)]\nfn test_point_outside_rectangle() {\n    main(0, 0, 45, 45, 50, 50);\n}\n\n#[test(should_fail)]\nfn test_invalid_latitude_range() {\n    main(0, -100, 45, 100, 30, 0);\n}\n\n#[test(should_fail)]\nfn test_point_outside_latitude_range() {\n    main(0, 0, 45, 45, 30, 91);\n}\n\n#[test(should_fail)]\nfn test_point_outside_longitude_range_across_antimeridian() {\n    main(170, -30, -170, 30, 0, 0);\n}\n\n#[test(should_fail)]\nfn test_invalid_rectangle_longitude() {\n    main(190, 0, 200, 45, 195, 30);\n}\n\n#[test(should_fail)]\nfn test_point_on_antimeridian_outside_range() {\n    main(-170, -30, 170, 30, 180, 0);\n}\n",
      "path": "/workspaces/zk-location-web/circuits/src/main.nr"
    }
  },
  "names": ["main"],
  "brillig_names": ["directive_integer_quotient"]
}
