{
  "noir_version": "0.34.0+359caafac5e489901d9ff02b08d1a688178d9b0a",
  "hash": 10041822723097739904,
  "abi": {
    "parameters": [
      {
        "name": "x1",
        "type": { "kind": "integer", "sign": "signed", "width": 64 },
        "visibility": "public"
      },
      {
        "name": "y1",
        "type": { "kind": "integer", "sign": "signed", "width": 64 },
        "visibility": "public"
      },
      {
        "name": "x2",
        "type": { "kind": "integer", "sign": "signed", "width": 64 },
        "visibility": "public"
      },
      {
        "name": "y2",
        "type": { "kind": "integer", "sign": "signed", "width": 64 },
        "visibility": "public"
      },
      {
        "name": "x",
        "type": { "kind": "integer", "sign": "signed", "width": 64 },
        "visibility": "public"
      },
      {
        "name": "y",
        "type": { "kind": "integer", "sign": "signed", "width": 64 },
        "visibility": "public"
      }
    ],
    "return_type": null,
    "error_types": {}
  },
  "bytecode": "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",
  "debug_symbols": "tdzRTuJAFIDhd+k1FzNzzpk5x1fZGIOKhoSgUdxkY3z3ZV1qDG0wpfx3FOZ8kMBPQym8d/er27fHm/X24em1u/r13m2e7pa79dN2v/Xe1c+rXp+X239br7vly667aikW3Wp7v78k+WPRPaw3q+6qxsdisDSXfmnW9H3p9aJroO2gHaCdE4lnEi8kLiSuc3GVHjc5xo3EK4k3EncSDxAvicQziY8XKtrjVs+PqAiJK4kbiVcSbyTuJB4gLmkufiIiySReSFxIXEncSLySeCPx8ULta2fhaUZEAeKaSDyTeCFxIXElcSPxOhc/EZE2EncSDxC3ROKZxAuJC4n/9DnUj8swmzxRJ0+0yRM+eSKmTtTx12f0O1bPdvqJKF4OS0uUYzyTeCFxIXElcSPxSuKNxH0uHnZYKkmP8QDxlkg8k3ghcSFxJXEj8dFCPXuPS5wfUWsk7iQeIO6JxDOJFxIXEte5+ImI3Ei8kngjcSfxAPFIJJ5JfLxQ7cvwWs6PKITElcSNxCuJNxJ3Eg8QzynN1U9UlFNG9YLqguqK6obqFdUbqv/0gbQOE4nJIzlNH8nTR8r0EZk+MvpKja8D3lF/+E5fvNcl6kA3VK+o3lDdUT1Iffwkk4vpGdULqguqo60WtNWCtlrQVsvcVjW1w1IteaAHqUtC9YzqBdUF1RXVDdUrqjdUR1sVtFVFW1W0VZ3daunfgVUG78AqqK6obqheUb2huqN6kLolVM+ojrZqaKuGtmpoq3bB/eqI3lDdUT1IvSZUz6heUF1QXVF9WqufI6MB7o8093ezP7Tqpx+S1d43H/7gqcG+w36w/vhZNxf0M+wX2BfYV9g32If7bXC/De63wf36Bfr12vvhAz/DfoF9gX2FfYP9CvsN9h32g/UD7jfgfgPuN+B+Y2q/n0NTo7zeb9y+rDeb9ePN97/L2F/9e/myXt5uVofNh7ft3bdbd3+e/9+yJ/4C",
  "file_map": {
    "69": {
      "source": "/// Checks if a given longitude is valid (between -180 and 180 degrees, inclusive)\nfn is_valid_longitude(lon: i64) -> bool {\n    lon >= -180 & lon <= 180\n}\n\n/// Checks if a given latitude is valid (between -90 and 90 degrees, inclusive)\nfn is_valid_latitude(lat: i64) -> bool {\n    lat >= -90 & lat <= 90\n}\n\nfn is_longitude_in_range(start: i64, end: i64, point: i64) -> bool {\n    if start <= end {\n        point >= start & point <= end\n    } else {\n        point >= start | point <= end\n    }\n}\n\nfn is_latitude_in_range(start: i64, end: i64, point: i64) -> bool {\n    point >= start & point <= end\n}\n\n#[export]\nfn main(x1: pub i64, y1: pub i64, x2: pub i64, y2: pub i64, x: pub i64, y: pub i64) {\n    assert(is_valid_longitude(x1) & is_valid_longitude(x2) & is_valid_longitude(x));\n    assert(is_valid_latitude(y1) & is_valid_latitude(y2) & is_valid_latitude(y));\n\n    // Check if the point is in the longitude range\n    assert(is_longitude_in_range(x1, x2, x));\n\n    // Check if the point is in the latitude range\n    assert(is_latitude_in_range(y1, y2, y));\n}\n\n#[test]\nfn test_point_inside_rectangle() {\n    main(0, 0, 45, 45, 30, 30);\n}\n\n#[test]\nfn test_rectangle_crossing_antimeridian() {\n    main(170, -30, -170, 30, 175, 0);\n}\n\n#[test(should_fail)]\nfn test_point_outside_rectangle() {\n    main(0, 0, 45, 45, 50, 50);\n}\n\n#[test(should_fail)]\nfn test_invalid_latitude_range() {\n    main(0, -100, 45, 100, 30, 0);\n}\n\n#[test(should_fail)]\nfn test_point_outside_latitude_range() {\n    main(0, 0, 45, 45, 30, 91);\n}\n\n#[test(should_fail)]\nfn test_point_outside_longitude_range_across_antimeridian() {\n    main(170, -30, -170, 30, 0, 0);\n}\n\n#[test(should_fail)]\nfn test_invalid_rectangle_longitude() {\n    main(190, 0, 200, 45, 195, 30);\n}\n\n#[test(should_fail)]\nfn test_point_on_antimeridian_outside_range() {\n    main(-170, -30, 170, 30, 180, 0);\n}\n",
      "path": "/workspaces/zk-location-web/circuits/src/main.nr"
    }
  },
  "names": ["main"],
  "brillig_names": ["directive_integer_quotient"]
}
